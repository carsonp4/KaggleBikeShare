library(vroom)
library(tidyverse)
library(corrplot)
library(gridExtra)
# Reading in Data
train <- vroom("Desktop/Stat348/KaggleBikeShare/train.csv")
# Changing Variables
# datetime - hourly date + timestamp
train$season <- as.factor(train$season) # 1 = spring, 2 = summer, 3 = fall, 4 = winter
train$holiday <- as.factor(train$holiday) # whether the day is considered a holiday
train$workingday <- as.factor(train$workingday) # whether the day is neither a weekend nor holiday
library(vroom)
library(tidyverse)
library(corrplot)
library(gridExtra)
# Reading in Data
train <- vroom("Desktop/Stat348/KaggleBikeShare/train.csv")
# Reading in Data
train <- vroom("train.csv")
# Changing Variables
# datetime - hourly date + timestamp
train$season <- as.factor(train$season) # 1 = spring, 2 = summer, 3 = fall, 4 = winter
train$holiday <- as.factor(train$holiday) # whether the day is considered a holiday
train$workingday <- as.factor(train$workingday) # whether the day is neither a weekend nor holiday
train$weather <- as.factor(train$weather) #1: Clear, Few clouds, Partly cloudy, Partly cloudy 2: Mist + Cloudy, Mist + Broken clouds, Mist + Few clouds, Mist 3: Light Snow, Light Rain + Thunderstorm + Scattered clouds, Light Rain + Scattered clouds 4: Heavy Rain + Ice Pallets + Thunderstorm + Mist, Snow + Fog
# Plot to upload
data_info <- DataExplorer::plot_intro(train)
corr_con <- DataExplorer::plot_correlation(train, type="continuous")
bar_dis <- DataExplorer::plot_bar(train)
hist_con <- DataExplorer::plot_histogram(train)
(data_info + corr_con) / (bar_dis + hist_con)
plot_list <- c(data_info, corr_con, bar_dis, hist_con)
grid.arrange(grobs = plot_list, ncol = 2)
# Plot to upload
data_info <- DataExplorer::plot_intro(train)
corr_con <- DataExplorer::plot_correlation(train, type="continuous")
bar_dis <- DataExplorer::plot_bar(train)
hist_con <- DataExplorer::plot_histogram(train)
(data_info + corr_con) / (bar_dis + hist_con)
rlang::last_trace()
plot_list <- c(data_info, corr_con, bar_dis, hist_con)
grid.arrange(grobs = plot_list, ncol = 2)
grid.arrange(data_info, corr_con)
grid.arrange(data_info, corr_con, bar_dis, hist_con, ncol=2)
class(bar_dis)
bar_dist[[1]]
bar_dis[[1]]
grid.arrange(data_info, corr_con, bar_dis[[1]], hist_con, ncol=2)
grid.arrange(data_info, corr_con, bar_dis[[1]], hist_con[[1]], ncol=2)
(data_info + corr_con) / (bar_dis[[1]] + hist_con[[1]])
plot_list <- c(data_info, corr_con, bar_dis[[1]], hist_con[[1]])
grid.arrange(grobs = plot_list, ncol = 2)
grid.arrange(data_info, corr_con, bar_dis[[1]], hist_con[[1]], ncol=2)
